{"ast":null,"code":"var _jsxFileName = \"/Users/melanieflintrop/Desktop/dev/dl-agile-assessment/src/components/CheckboxField.js\";\nimport React from 'react';\nimport { Field } from 'formik';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckboxField({\n  name,\n  label,\n  indent,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Field, {\n    type: \"checkbox\",\n    name: name,\n    children: ({\n      field\n    }) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        ...field,\n        id: name,\n        ...rest,\n        checked: field.value // Set the checked state based on field.value\n        ,\n        sx: {\n          marginleft: indent ? 5 : 2 // Add padding to the Checkbox component\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this),\n      label: label,\n      sx: {\n        textAlign: 'left'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = CheckboxField;\nexport default CheckboxField;\nvar _c;\n$RefreshReg$(_c, \"CheckboxField\");","map":{"version":3,"names":["React","Field","FormControlLabel","Checkbox","jsxDEV","_jsxDEV","CheckboxField","name","label","indent","rest","type","children","field","control","id","checked","value","sx","marginleft","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","_c","$RefreshReg$"],"sources":["/Users/melanieflintrop/Desktop/dev/dl-agile-assessment/src/components/CheckboxField.js"],"sourcesContent":["import React from 'react';\nimport { Field } from 'formik';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nfunction CheckboxField({ name, label, indent, ...rest }) {\n    return (\n        <Field type=\"checkbox\" name={name}>\n            {({ field }) => (\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            {...field}\n                            id={name}\n                            {...rest}\n                            checked={field.value} // Set the checked state based on field.value\n                            sx={{\n                                marginleft: indent ? 5 : 2, // Add padding to the Checkbox component\n                            }}\n                        />\n                    }\n                    label={label}\n                    sx={{\n                        textAlign: 'left',\n                    }}\n                />\n            )}\n        </Field>\n    );\n}\n\nexport default CheckboxField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,QAAQ;AAC9B,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,aAAaA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,MAAM;EAAE,GAAGC;AAAK,CAAC,EAAE;EACrD,oBACIL,OAAA,CAACJ,KAAK;IAACU,IAAI,EAAC,UAAU;IAACJ,IAAI,EAAEA,IAAK;IAAAK,QAAA,EAC7BA,CAAC;MAAEC;IAAM,CAAC,kBACPR,OAAA,CAACH,gBAAgB;MACbY,OAAO,eACHT,OAAA,CAACF,QAAQ;QAAA,GACDU,KAAK;QACTE,EAAE,EAAER,IAAK;QAAA,GACLG,IAAI;QACRM,OAAO,EAAEH,KAAK,CAACI,KAAM,CAAC;QAAA;QACtBC,EAAE,EAAE;UACAC,UAAU,EAAEV,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;QAChC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ;MACDf,KAAK,EAAEA,KAAM;MACbU,EAAE,EAAE;QACAM,SAAS,EAAE;MACf;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB;AAACE,EAAA,GAxBQnB,aAAa;AA0BtB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}